/**
 * Show the tree of admins presets.
 *
 * @module     tool_admin_presets/tree
 * @copyright  2019 Pimenko <contact@pimenko.com>
 * @author     Jordan Kesraoui
 * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
 */
define("tool_admin_presets/adminpresets_tree",["core/ajax","core/tree","core/templates","jquery"],((Ajax,TreeAccessible,Templates,$)=>{let NodeTree=function(id,settingId,label,description){this.id=id,this.settingId=settingId,this.label=label,this.description=description,this.parent=null,this.displayed=!1,this.checked=!0,this.level=1,this.children=[],this.padding=0};NodeTree.prototype.hasChildren=function(){return this.children.length>0},NodeTree.prototype.isEmpty=function(){return"category"===this.settingId&&!this.hasChildren()};let Tree=function(rootNode){this.view=null,this.nodes=[],this.accessibleview=null,this.rootNode=document.getElementById(rootNode)};return Tree.prototype.init=function(ids,nodeids,labels,descriptions,parents){let nelements=ids.length;this.rootNode.innerHTML="";let promises=[];for(let i=0;i<nelements;i++){let newNode=new NodeTree(nodeids[i],ids[i],decodeURIComponent(labels[i]),decodeURIComponent(descriptions[i]));this.nodes[newNode.id]=newNode}for(let i=0;i<nelements;i++)"root"===parents[i]?this.nodes[nodeids[i]].parent=null:(this.nodes[nodeids[i]].parent=this.nodes[parents[i]],this.nodes[parents[i]].children.push(this.nodes[nodeids[i]]));for(var key in this.nodes)this.nodes.hasOwnProperty(key)&&null===this.nodes[key].parent&&promises.push(this.display(key));Promise.all(promises).finally((()=>{this.accessibleview=new TreeAccessible("#"+this.rootNode.getAttribute("id"))})).catch((function(error){window.console.log(error)}))},Tree.prototype.applyEvent=function(nodeId){let node=this.nodes[nodeId];if(node.displayed){let elementNode=document.getElementById(nodeId);elementNode.addEventListener("focus",(()=>{if(node.hasChildren()){let promises=[];node.children.forEach((nodeChild=>{promises.push(this.display(nodeChild.id))})),Promise.all(promises).finally((()=>{this.accessibleview.initialiseNodes($("#"+nodeId))})).catch((function(error){window.console.log(error)}))}})),document.getElementById(nodeId+"_checkbox").addEventListener("click",(event=>{event.stopPropagation(),this.setChecked(nodeId,!node.checked)})),elementNode.addEventListener("keydown",(event=>{switch(event.key){case"Enter":return event.stopPropagation(),event.preventDefault(),void this.setChecked(nodeId,!node.checked);case"ArrowRight":if(event.stopPropagation(),event.preventDefault(),this.accessibleview.isGroupItem($(event.target))&&this.accessibleview.isGroupCollapsed($(event.target).find("a.collapse_link"))){$(event.target).find("a.collapse_link").first().click(),$(event.target).find("div[role=group]").first().find("div[role=treeitem]").first().focus()}return;case"ArrowLeft":if(event.stopPropagation(),event.preventDefault(),this.accessibleview.isGroupItem($(event.target)))if(this.accessibleview.isGroupCollapsed($(event.target).find("a.collapse_link")))$(event.target).parents("div[role=treeitem]").first().focus();else{let collapselink=$(event.target).find("a.collapse_link").first();collapselink.click(),collapselink.parent().focus()}else $(event.target).parents("div[role=treeitem]").first().focus();return;case"ArrowDown":if(event.stopPropagation(),event.preventDefault(),!0===$(event.target).data("setting")||this.accessibleview.isGroupCollapsed($(event.target).find("a.collapse_link"))){let next=$(event.target).next();if(next.is(":visible"))next.focus();else if(0===$(event.target).next().length){$(event.target).parents("div[role=treeitem]").next().focus()}}else{$(event.target).find("div[role=group]").first().find("div[role=treeitem]").first().focus()}return;case"ArrowUp":{event.stopPropagation(),event.preventDefault();let prev=$(event.target).prev();if(prev.is(":visible"))prev.focus();else if(0===$(event.target).prev().length){$(event.target).parents("div[role=treeitem]").focus()}return}}}))}},Tree.prototype.display=function(nodeId){return new Promise(((resolve,reject)=>{let node=this.nodes[nodeId];if(node.displayed||node.isEmpty())resolve(!0);else{let parentElement=null;null===node.parent?parentElement=this.rootNode:(parentElement=document.getElementById(node.parent.id).querySelector("div[role=group]"),this.nodes[nodeId].level=this.nodes[node.parent.id].level+1);let haschildren="";node.hasChildren()&&(haschildren="has-children");let checked=!1;node.checked&&(checked=!0);let issetting=!1;"setting"===node.settingId&&(issetting=!0),node.level>1&&(node.padding=20*(node.level-1),issetting&&(node.padding=node.padding+15));let settingsnbr=0;if(node.hasChildren()){let countsetting=0;node.children.forEach((childNode=>{countsetting+=this.getSettingsNbr(childNode.id)})),settingsnbr=countsetting}let newNode={id:node.id,level:node.level,label:node.label,has_children:haschildren,checked:checked,setting:issetting,settingsnumber:settingsnbr,padding:node.padding};Templates.render("tool_admin_presets/tree_node",newNode).then((html=>{if(parentElement.insertAdjacentHTML("beforeend",html),this.nodes[nodeId].displayed=!0,this.applyEvent(nodeId),!0===newNode.setting){let escapeId=newNode.id.replace("@@","\\@\\@");document.querySelectorAll("#"+escapeId+" .admin_presets_tree_name")[0].style.padding="0px 0px 0px "+newNode.padding+"px"}return resolve(!0)})).catch((function(error){reject(!1),window.console.log(error)}))}}))},Tree.prototype.getSettingsNbr=function(nodeId){let node=this.nodes[nodeId],countsettings=0;return"setting"===node.settingId&&countsettings++,node.hasChildren()&&node.children.forEach((childNode=>{countsettings+=this.getSettingsNbr(childNode.id)})),countsettings},Tree.prototype.setChecked=function(nodeId,checked){let node=this.nodes[nodeId];if(this.nodes[nodeId].checked=checked,node.displayed){document.getElementById(nodeId+"_checkbox").checked=checked;let escapeId=nodeId.replace("@@","\\@\\@");checked?document.querySelector("label[for="+escapeId+"_checkbox]").classList.add("active"):document.querySelector("label[for="+escapeId+"_checkbox]").classList.remove("active")}node.hasChildren()&&node.children.forEach((childNode=>{this.setChecked(childNode.id,checked)}))},Tree.prototype.submit=function(buttonId){document.getElementById(buttonId).addEventListener("click",(()=>{let settingsPresetsForm=document.getElementById("settings_tree_div");for(let key in this.nodes)if(this.nodes.hasOwnProperty(key)){let node=this.nodes[key];if(document.getElementById(node.id+"_checkbox")){let settingInput=document.getElementById(node.id+"_checkbox");settingInput.checked&&settingInput.setAttribute("value","1")}else if("category"!==node.settingId&&"page"!==node.settingId&&node.checked){let settingInput=document.createElement("input");settingInput.setAttribute("type","hidden"),settingInput.setAttribute("name",node.id),settingInput.setAttribute("value","1"),settingsPresetsForm.appendChild(settingInput)}}}))},TreeAccessible.prototype.removeAllFromTabOrder=function(node){node.find("*").attr("tabindex","-1"),this.getGroupFromItem($(node)).find("*").attr("tabindex","-1")},{init:action=>{"export"===action&&(window.ajaxmethodname="tool_admin_presets_get_settings"),Ajax.call([{methodname:window.ajaxmethodname,args:{}}],!0,!0)[0].done((response=>{let treesettings=new Tree("settings_tree_div");treesettings.init(response.settings.ids,response.settings.nodes,response.settings.labels,response.settings.descriptions,response.settings.parents);let treeplugins=new Tree("settingsplugin_tree_div");treeplugins.init(response.plugins.ids,response.plugins.nodes,response.plugins.labels,response.plugins.descriptions,response.plugins.parents),treesettings.submit("id_submitbutton"),treeplugins.submit("id_submitbutton")}))}}}));

//# sourceMappingURL=adminpresets_tree.min.js.map